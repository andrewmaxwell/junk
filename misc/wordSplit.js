// https://www.codewars.com/kata/552fd698ac49561baf00006e/train/javascript

function wordBreak(dictWords, sentence) {
  const trie = {};
  for (const w of dictWords) {
    [...w].reduce((r, t) => (r[t] ||= {}), trie).$ = w;
  }

  const getWords = (sentence) => {
    const result = [];
    let curr = trie;
    for (const t of sentence) {
      if (curr.$) result.push(curr.$);
      if (curr[t]) curr = curr[t];
      else break;
    }
    if (curr.$) result.push(curr.$);
    return result;
  };

  const recurse = (sentence, result) => {
    if (!sentence) return result;
    for (const w of getWords(sentence)) {
      const solution = recurse(sentence.slice(w.length), [...result, w]);
      if (solution) return solution;
    }
  };

  return recurse(sentence, []);
}

import {Test, it} from './test.js';

const dictWords = [
  'american',
  'four',
  'i',
  'john',
  'may',
  'mr',
  'mrs',
  'us',
  'united',
  'a',
  'about',
  'act',
  'after',
  'again',
  'against',
  'all',
  'almost',
  'along',
  'also',
  'always',
  'am',
  'among',
  'an',
  'and',
  'another',
  'any',
  'are',
  'around',
  'as',
  'asked',
  'at',
  'away',
  'back',
  'be',
  'because',
  'become',
  'been',
  'before',
  'began',
  'best',
  'better',
  'between',
  'big',
  'both',
  'business',
  'but',
  'by',
  'called',
  'came',
  'can',
  'case',
  'certain',
  'change',
  'child',
  'children',
  'church',
  'city',
  'close',
  'come',
  'company',
  'could',
  'country',
  'course',
  'day',
  'days',
  'development',
  'did',
  "didn't",
  'do',
  'does',
  "don't",
  'done',
  'down',
  'during',
  'each',
  'early',
  'end',
  'enough',
  'even',
  'ever',
  'every',
  'eyes',
  'face',
  'fact',
  'family',
  'far',
  'feel',
  'felt',
  'few',
  'find',
  'first',
  'for',
  'form',
  'from',
  'general',
  'get',
  'give',
  'given',
  'go',
  'god',
  'going',
  'good',
  'got',
  'govern',
  'government',
  'great',
  'group',
  'had',
  'hand',
  'has',
  'have',
  'he',
  'head',
  'help',
  'her',
  'here',
  'high',
  'him',
  'himself',
  'his',
  'home',
  'house',
  'how',
  'however',
  'if',
  'important',
  'in',
  'interest',
  'into',
  'is',
  'it',
  'its',
  'just',
  'keep',
  'kind',
  'knew',
  'know',
  'large',
  'last',
  'later',
  'law',
  'least',
  'leave',
  'less',
  'let',
  'life',
  'light',
  'like',
  'line',
  'little',
  'long',
  'look',
  'looked',
  'made',
  'make',
  'man',
  'many',
  'matter',
  'me',
  'mean',
  'means',
  'members',
  'men',
  'might',
  'mind',
  'more',
  'most',
  'much',
  'must',
  'my',
  'name',
  'national',
  'need',
  'never',
  'new',
  'next',
  'night',
  'no',
  'not',
  'nothing',
  'now',
  'number',
  'of',
  'off',
  'often',
  'old',
  'on',
  'once',
  'one',
  'only',
  'open',
  'or',
  'order',
  'other',
  'others',
  'our',
  'out',
  'over',
  'own',
  'part',
  'people',
  'per',
  'place',
  'point',
  'possible',
  'power',
  'present',
  'president',
  'problem',
  'program',
  'public',
  'put',
  'question',
  'rather',
  'real',
  'right',
  'room',
  'said',
  'same',
  'say',
  'school',
  'second',
  'see',
  'seem',
  'seemed',
  'sense',
  'service',
  'set',
  'several',
  'she',
  'should',
  'show',
  'side',
  'since',
  'small',
  'so',
  'social',
  'some',
  'something',
  'state',
  'states',
  'still',
  'such',
  'system',
  'take',
  'tell',
  'than',
  'that',
  'the',
  'their',
  'them',
  'then',
  'there',
  'these',
  'they',
  'thing',
  'things',
  'think',
  'this',
  'those',
  'though',
  'thought',
  'three',
  'through',
  'time',
  'to',
  'told',
  'too',
  'took',
  'toward',
  'turn',
  'turned',
  'two',
  'under',
  'unite',
  'until',
  'up',
  'upon',
  'use',
  'used',
  'very',
  'want',
  'war',
  'was',
  'water',
  'way',
  'we',
  'week',
  'well',
  'went',
  'were',
  'what',
  'when',
  'where',
  'which',
  'while',
  'white',
  'who',
  'why',
  'will',
  'with',
  'within',
  'without',
  'word',
  'work',
  'would',
  'year',
  'yet',
  'you',
  'young',
  'your',
];

function correctSplit(sentence, wordList = []) {
  return (
    sentence === wordList.join('') &&
    wordList.every((word) => dictWords.includes(word))
  );
}

it('song', () => {
  let sentence = 'onelittletwolittlethreelittleindians';
  let dict = ['one', 'two', 'three', 'little', 'indians'];
  Test.assertDeepEquals(
    wordBreak(dict, sentence),
    'one little two little three little indians'.split(' ')
  );
});
it('shakespeare 1', () => {
  Test.assertDeepEquals(
    wordBreak(dictWords, 'tobeornottobethatisthequestion'),
    'to be or not to be that is the question'.split(' ')
  );
});
it('shakespeare 2', () => {
  Test.assertDeepEquals(
    wordBreak(dictWords, 'weknowwhatwearebutknownotwhatwemaybe'),
    'we know what we are but know not what we may be'.split(' ')
  );
});
it('may return any word breaks from the dictionary', () => {
  let sentence = 'webecomewhatwethinkabout';
  let result = wordBreak(dictWords, sentence);
  if (correctSplit(sentence, result)) Test.assertDeepEquals(result, result);
  else
    Test.assertDeepEquals(
      result,
      'EITHER ["we","become","what","we","think","about"] OR ["we","be","come","what","we","think","about"]',
      'There were two possible solutions, but this is neither of them'
    );
});
it('should not find if the word is not in the dictionary', () => {
  Test.assertDeepEquals(
    wordBreak(dictWords, 'ifmusicbethefoodofloveplayon'),
    undefined
  );
});
